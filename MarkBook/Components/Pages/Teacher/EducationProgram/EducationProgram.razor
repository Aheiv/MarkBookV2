@page "/teacher{n}/programs"

@using Microsoft.EntityFrameworkCore
@using MarkBook.Data.Database.Model

@inject NavigationManager navigation
@layout Components.Layout.LeaveLayout
@inject IDbContextFactory<Data.Database.Context> DbFactory
@rendermode InteractiveServer


<div class="content">
	<div class="navigation d-flex align-items-center justify-content-center">
		<button class="btn btn-primary me-2" @onclick="ShowSections">Содержание обучения</button>
		<button class="btn btn-primary me-2" @onclick="ShowResults">Результаты изучения</button>
		<button class="btn btn-primary me-2" @onclick="ShowTools">Материально-техническое обеспечение</button>
		<button class="btn btn-primary" @onclick="ShowMaterials">Перечень учебно-методического обеспечения</button>
	</div>
	
	<div class="sections" hidden="@(!isSectionsDisplayed)">
		
		<button class="btn btn-success ms-3" @onclick="NewSectionBlock">Новый раздел</button>
		<div class="m-2">
			@foreach (var sec in sections)
			{
				
				<div class="section flex-row border border-2 rounded-2 p-2 m-2 border-dark">
					<div style="display: flex;" class="align-items-center">
						<span>Название раздела</span>
						<input placeholder="Название раздела" @bind=sec.Name />
						<span>Количество часов, всего</span>
						<input placeholder="Количество часов, всего" @bind=sec.Hours />
						<span style="display: flex; flex: 1 1 auto"></span>
						<button class="btn btn-danger" @onclick="@(e => RemoveSection(sec))">Удалить</button>
						<button class="btn btn-outline-secondary m-2 " @onclick="@(e => CollapseSingleSection(sec))">
							@GetButtonCollapseName(sec)
						</button>
					</div>
					
					<div class="themes" hidden="@IsSingleSectionCollapsed(sec)">
						<span>Темы раздела @sec.Name</span>
						<div>
							<table class="table table-striped">
								<thead>
									<tr>
										<th scope="col">Название</th>
										<th scope="col">Количество часов</th>
										<th scope="col">Описание</th>
										<th scope="col"></th>
									</tr>
								</thead>
								<tbody>
									@foreach (var theme in sec.SectionThemes)
									{
										<tr class="theme-row">
											<td><input @bind=theme.Name /></td>
											<td><input @bind=theme.Hours /></td>
											<td><input @bind=theme.Description /></td>
											<td><button class="btn btn-danger" @onclick="@(e => sec.SectionThemes.Remove(theme))">Удалить</button></td>
										</tr>
									}
								</tbody>
							</table>
						</div>
						<button class="btn btn-success" @onclick="@(e => NewThemeRow(sec))">Новая тема</button>
					</div>
				</div>
			}
		</div>
	</div>

	<div class="results" hidden="@(!isResultsDisplayed)">
		<button class="btn btn-success ms-3" @onclick="NewResultRow">Новый результат</button>
		<div class="m-2">
			<table class="table table-striped">
				<thead>
					<tr>
						<th scope="col">Тип результата</th>
						<th scope="col">Ожидаемый результат</th>
						<th scope="col"></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var res in results)
					{
						<tr class="theme-row">
							<td class="w-25 align-middle">
								<select @bind=res.Course class="form-select">
									<option value="Личностный">Личностный</option>
									<option value="Метапредметный">Метапредметный</option>
									<option value="Предментный">Предметный</option>
								</select>
							</td>
							<td class="align-middle"><textarea @bind=res.Result placeholder="Ожидаемый результат" class="w-100 form-control"></textarea></td>
							<td class="text-nowrap align-middle" style="width:1%"><button class="btn btn-danger" @onclick="@(e => results.Remove(res))">Удалить</button></td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>

	<div class="tools" hidden="@(!isToolsDisplayed)">
		<button class="btn btn-success ms-3" @onclick="NewToolRow">Новый объект</button>
		<div class="m-2">
			<table class="table table-striped">
				<thead>
					<tr>
						<th scope="col">Объект материально-технического обеспечения</th>
						<th scope="col"></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var tool in tools)
					{
						<tr class="theme-row">
							<td class="align-middle"><input @bind=tool.Name placeholder="Объект" class="w-100 form-control"/></td>
							<td class="text-nowrap align-middle" style="width:1%">
								<button class="btn btn-danger" @onclick="@(e => tools.Remove(tool))">Удалить</button>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
		
</div>

@code {
	[Parameter]
	public string n { get; set; }


	public bool isSectionsDisplayed = true;
	public bool isResultsDisplayed = false;
	public bool isToolsDisplayed = false;
	public bool isMaterialsDisplayed = false;

	List<ProgramSection> sections = new List<ProgramSection>();
	List<ProgramResult> results = new List<ProgramResult>();
	List<ProgramTool> tools = new List<ProgramTool>();

	List<bool> sectionsCollapseStates = new List<bool>();


	protected override async Task OnInitializedAsync()
	{
		NewSectionBlock();
		NewResultRow();
		NewToolRow();
	}

	/* Методы разделов и их тем */
	private void NewThemeRow(ProgramSection section)
	{
		section.SectionThemes.Add(new SectionTheme());
	}

	private void NewSectionBlock()
	{
		sections.Add(new ProgramSection());
		NewThemeRow(sections[sections.Count - 1]);
		sectionsCollapseStates.Add(true);
	}

	private void CollapseSingleSection(ProgramSection section)
	{
		int index = sections.IndexOf(section);
		sectionsCollapseStates[index] = !sectionsCollapseStates[index];
	}

	private bool IsSingleSectionCollapsed(ProgramSection section)
	{
		int index = sections.IndexOf(section);
		return sectionsCollapseStates[index];
	}

	private string GetButtonCollapseName(ProgramSection section)
	{
		return IsSingleSectionCollapsed(section) ? "▼" : "▲";
	}

	private void RemoveSection(ProgramSection section)
	{
		int index = sections.IndexOf(section);
		sections.Remove(section);
		sectionsCollapseStates.RemoveAt(index);
	}

	/* Методы результатов изучения */

	private void NewResultRow()
	{
		results.Add(new ProgramResult() { Course = "Личностный" });
	}

	/* Методы объектов материально-технического обеспечения */

	private void NewToolRow()
	{
		tools.Add(new ProgramTool());
	}

	/* Методы отображения блоков рабочей программы */

	private void ShowSections()
	{
		isSectionsDisplayed = true;
		isToolsDisplayed = false;
		isMaterialsDisplayed = false;
		isResultsDisplayed = false;
	}

	private void ShowTools()
	{
		isSectionsDisplayed = false;
		isToolsDisplayed = true;
		isMaterialsDisplayed = false;
		isResultsDisplayed = false;
	}

	private void ShowMaterials()
	{
		isSectionsDisplayed = false;
		isToolsDisplayed = false;
		isMaterialsDisplayed = true;
		isResultsDisplayed = false;
	}

	private void ShowResults()
	{
		isSectionsDisplayed = false;
		isToolsDisplayed = false;
		isMaterialsDisplayed = false;
		isResultsDisplayed = true;
	}
}
